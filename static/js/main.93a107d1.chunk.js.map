{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","getUserPosts","userId","a","fetch","userPosts","json","response","data","result","filter","post","getPostDetails","postId","postDetails","PostsList","setPostId","useState","posts","setPosts","useEffect","then","postsOfUser","className","map","key","id","title","type","onClick","openPostId","getPostComments","postComments","comment","deleteComment","commentId","method","addComment","name","email","body","JSON","stringify","NewCommentForm","setName","setEmail","setBody","onSubmit","event","preventDefault","value","onChange","target","placeholder","PostDetails","comments","setComments","setPostDetails","commentsHidden","setCommentsHidden","commentsList","length","App","setUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93a107d1.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = async(userId) => {\n  const userPosts = await fetch(`${BASE_URL}/posts/`);\n  const response = await userPosts.json();\n  const result = await response.data;\n\n  if (userId === 0) {\n    return result;\n  }\n\n  return result.filter(post => post.userId === userId);\n};\n\nexport const getPostDetails = async(postId) => {\n  const postDetails = await fetch(`${BASE_URL}/posts/${postId}`);\n  const response = await postDetails.json();\n  const result = await response.data;\n\n  return result;\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\nimport { getUserPosts } from '../../api/posts';\n\nexport const PostsList = ({ userId, postId, setPostId }) => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    getUserPosts(userId)\n      .then(postsOfUser => setPosts(postsOfUser));\n  }, [userId]);\n\n  const handleClick = (openPostId) => {\n    if (postId === openPostId) {\n      setPostId(0);\n    } else {\n      setPostId(openPostId);\n    }\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n\n          <li\n            key={post.id}\n            className=\"PostsList__item\"\n          >\n            <div>\n              <b>\n                {`[User #${post.userId}]: `}\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => handleClick(post.id)}\n            >\n              {(postId === post.id) ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  userId: PropTypes.number.isRequired,\n  postId: PropTypes.number.isRequired,\n  setPostId: PropTypes.func.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async(postId) => {\n  const postComments = await fetch(`${BASE_URL}/comments/`);\n  const response = await postComments.json();\n\n  if (postId === 0) {\n    return response.data;\n  }\n\n  return response.data.filter(comment => comment.postId === postId);\n};\n\nexport const deleteComment = async(commentId) => {\n  const postComments = await fetch(`${BASE_URL}/comments/${commentId}`,\n    { method: 'DELETE' });\n  const response = await postComments.json();\n  const result = await response.data;\n\n  return result;\n};\n\nexport const addComment = async(\n  postId,\n  name,\n  email,\n  body) => fetch(`${BASE_URL}/comments/`, {\n  method: 'POST',\n  body: JSON.stringify({\n    postId, name, email, body,\n  }),\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { addComment } from '../../api/comments';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addComment(postId, name, email, body);\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={handleSubmit}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={body}\n          onChange={event => setBody(event.target.value)}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostComments, deleteComment } from '../../api/comments';\nimport { getPostDetails } from '../../api/posts';\n\nexport const PostDetails = ({ postId }) => {\n  const [comments, setComments] = useState([]);\n  const [postDetails, setPostDetails] = useState('');\n  const [commentsHidden, setCommentsHidden] = useState(false);\n\n  useEffect(() => {\n    getPostComments(postId)\n      .then(commentsList => setComments(commentsList));\n\n    getPostDetails(postId)\n      .then(post => setPostDetails(post.body));\n  }, [postId, comments]);\n\n  const hide = () => {\n    setCommentsHidden(!commentsHidden);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{postDetails}</p>\n      </section>\n\n      {(comments.length > 0) && (\n        <section className=\"PostDetails__comments\">\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={hide}\n          >\n            {`${commentsHidden ? 'Show' : 'Hide'} ${comments.length} comments`}\n          </button>\n\n          {!commentsHidden && (\n            <ul className=\"PostDetails__list\">\n              {comments.map(comment => (\n                <li key={comment.id} className=\"PostDetails__list-item\">\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => deleteComment(comment.id)}\n                  >\n                    X\n                  </button>\n                  <p>{comment.body}</p>\n                </li>\n              ))}\n            </ul>\n          )}\n        </section>\n      )}\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm comments={comments} postId={postId} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [userId, setUserId] = useState(0);\n  const [postId, setPostId] = useState(0);\n  // console.log(postId);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={event => setUserId(+event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={userId}\n            postId={postId}\n            setPostId={setPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {(postId !== 0) && <PostDetails postId={postId} />}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}